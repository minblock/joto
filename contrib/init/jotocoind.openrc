#!/sbin/runscript

# backward compatibility for existing gentoo layout 
#
if [ -d "/var/lib/sovcore/.sovcore" ]; then
	SOVD_DEFAULT_DATADIR="/var/lib/sovcore/.sovcore"
else
	SOVD_DEFAULT_DATADIR="/var/lib/sovd"
fi

SOVD_CONFIGFILE=${SOVD_CONFIGFILE:-/etc/sovcore/sov.conf}
SOVD_PIDDIR=${SOVD_PIDDIR:-/var/run/sovd}
SOVD_PIDFILE=${SOVD_PIDFILE:-${SOVD_PIDDIR}/sovd.pid}
SOVD_DATADIR=${SOVD_DATADIR:-${SOVD_DEFAULT_DATADIR}}
SOVD_USER=${SOVD_USER:-${SOV_USER:-sovcore}}
SOVD_GROUP=${SOVD_GROUP:-sovcore}
SOVD_BIN=${SOVD_BIN:-/usr/bin/sovd}
SOVD_NICE=${SOVD_NICE:-${NICELEVEL:-0}}
SOVD_OPTS="${SOVD_OPTS:-${SOV_OPTS}}"

name="SOV Core Daemon"
description="SOV cryptocurrency P2P network daemon"

command="/usr/bin/sovd"
command_args="-pid=\"${SOVD_PIDFILE}\" \
		-conf=\"${SOVD_CONFIGFILE}\" \
		-datadir=\"${SOVD_DATADIR}\" \
		-daemon \
		${SOVD_OPTS}"

required_files="${SOVD_CONFIGFILE}"
start_stop_daemon_args="-u ${SOVD_USER} \
			-N ${SOVD_NICE} -w 2000"
pidfile="${SOVD_PIDFILE}"

# The retry schedule to use when stopping the daemon. Could be either
# a timeout in seconds or multiple signal/timeout pairs (like
# "SIGKILL/180 SIGTERM/300")
retry="${SOVD_SIGTERM_TIMEOUT}"

depend() {
	need localmount net
}

# verify
# 1) that the datadir exists and is writable (or create it)
# 2) that a directory for the pid exists and is writable
# 3) ownership and permissions on the config file
start_pre() {
	checkpath \
	-d \
	--mode 0750 \
	--owner "${SOVD_USER}:${SOVD_GROUP}" \
	"${SOVD_DATADIR}"

	checkpath \
	-d \
	--mode 0755 \
	--owner "${SOVD_USER}:${SOVD_GROUP}" \
	"${SOVD_PIDDIR}"

	checkpath -f \
	-o ${SOVD_USER}:${SOVD_GROUP} \
	-m 0660 \
	${SOVD_CONFIGFILE}

	checkconfig || return 1
}

checkconfig()
{
	if ! grep -qs '^rpcpassword=' "${SOVD_CONFIGFILE}" ; then
		eerror ""
		eerror "ERROR: You must set a secure rpcpassword to run sovd."
		eerror "The setting must appear in ${SOVD_CONFIGFILE}"
		eerror ""
		eerror "This password is security critical to securing wallets "
		eerror "and must not be the same as the rpcuser setting."
		eerror "You can generate a suitable random password using the following"
		eerror "command from the shell:"
		eerror ""
		eerror "bash -c 'tr -dc a-zA-Z0-9 < /dev/urandom | head -c32 && echo'"
		eerror ""
		eerror "It is also recommended that you also set alertnotify so you are "
		eerror "notified of problems:"
		eerror ""
		eerror "ie: alertnotify=echo %%s | mail -s \"SOV Core Alert\"" \
			"admin@foo.com"
		eerror ""
		return 1
	fi
}
